{"version":3,"sources":["components/Home/HomeView.jsx","components/Home/Home.js","components/Map/Map.js","components/AddObservation/AddObservationView.jsx","components/AddObservation/AddObservation.js","components/Register/RegisterView.jsx","components/Register/Register.js","App.js","serviceWorker.js","reducers/people-reducer.js","data/observations.js","reducers/observations-reducer.js","reducers/user-reducer.js","reducers/index.js","index.js"],"names":["HomeView","props","react_default","a","createElement","Fragment","Home","console","log","Home_HomeView","Component","Map","state","viewport","latitude","longitude","zoom","accessToken","popup","onViewportChange","width","height","etc","Object","objectWithoutProperties","_this","setState","showPop","obs","esm","parseFloat","lat","lng","offsetLeft","offsetTop","onClick","goToObservationDetails","title","_this2","this","puntos","observations","map","key","id","className","assign","mapStyle","mapboxApiAccessToken","pop","connect","user","AddObservationView","_props","objectSpread","observationContents","date","hour","onAddObservation","onFieldChange","onContentChange","onSetDateNow","onSetMyLocation","onAddSubtitle","onAddTextArea","onAddImage","onAddVideo","observationContentsPreview","obsCont","preview","type","value","text","onChange","src","url","alt","frameBorder","allow","allowFullScreen","name","lang","placeholder","AddObservation","tags","imageUrl","videoUrl","imageFile","handleSetDateNow","handleSetMyLocation","handleAddSubtitle","newContent","length","concat","toConsumableArray","handleAddTextArea","handleAddImage","handleAddVideo","handleContentChange","e","target","contents","find","cont","handleContentDelete","handleContentChangePosition","handleFieldChange","split","videoId","defineProperty","handleAddObservation","dispatch","redirect","AddObservation_AddObservationView","RegisterView","onNameChange","addPerson","Register","newId","handleNameChange","userId","react_router","to","Register_RegisterView","App","react_router_dom","basename","exact","path","component","Boolean","window","location","hostname","match","people","arguments","undefined","action","newUser","defaultObservations","newObservation","filter","observationId","usere","rootReducer","combineReducers","PeopleReducer","ObservationsReducer","UserReducer","ReactDOM","render","es","store","createStore","reducers","baseUrl","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9a9a7d46.chunk.js","sourcesContent":["import React from \"react\"\n\nimport style from \"./Home.css\";\n\nconst HomeView = (props) => {\n  return <>Home</>\n}\n\nexport default HomeView","import React, { Component } from \"react\"\n\nimport HomeView from './HomeView'\n\nclass Home extends Component {\n  \n  componentDidMount () {\n    console.log('Home Did Mount')\n  }\n\n  componentWillUnmount () {\n    console.log('Home Will unMount')\n  }\n  \n  render() {\n    return <HomeView/>\n  }\n}\n\nexport default Home","import React, { Component } from \"react\"\n\nimport style from './Map.css'\n\nimport ReactMapGL, { Popup, Marker }from 'react-map-gl';\nimport { connect } from \"react-redux\";\n\nclass Map extends Component {\n\n  state = {\n    viewport: {\n      latitude: 19.0,\n      longitude: -100.0,\n      zoom: 6\n    },\n    accessToken: 'pk.eyJ1IjoicmFsZXhyZHoiLCJhIjoiY2lmdHB2aGo2MTZ4MnQ1bHkzeDJyaDMzNyJ9.UHhEm9gA1_uwAztXjb7iTQ',\n    popup: null\n  };\n\n  onViewportChange = viewport => { \n    const {width, height, ...etc} = viewport\n    this.setState({viewport: etc})\n  } \n\n  showPop = (obs) => {\n    console.log('showPopup');\n    \n    if ( !! obs ) {\n      console.log('yes')\n      this.setState({\n        popup: <Popup  latitude={parseFloat(obs.lat)} longitude={parseFloat(obs.lng)} offsetLeft={-20} offsetTop={-10}>\n        <div onClick={() => this.goToObservationDetails(obs)}>{obs.title}</div>\n      </Popup>\n      })\n    } else {\n      this.setState({\n        popup: null\n      })\n    }\n  }\n\n  goToObservationDetails = (obs) => {\n    console.log('asd')\n  } \n\n  render() {\n    const viewport = this.state.viewport\n    const puntos = this.props.observations.map(obs => {\n      return (\n        <Marker \n          latitude={parseFloat(obs.lat)} \n          longitude={parseFloat(obs.lng)} \n          offsetLeft={-20} \n          offsetTop={-10}\n          key={obs.id}\n        >\n          <div className=\"marker\" onClick={() => this.showPop(obs)}></div>\n        </Marker>\n      )\n    })\n    return (\n      <div id=\"map-container\">\n        <ReactMapGL\n          height=\"100%\"\n          width=\"100%\"\n          mapStyle=\"mapbox://styles/mapbox/outdoors-v9\"\n          {...viewport}\n          mapboxApiAccessToken={this.state.accessToken}\n          onViewportChange={viewport => this.onViewportChange(viewport)}\n        >\n          {\n            puntos\n          }\n          {\n            this.state.pop\n          }\n        </ReactMapGL>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    observations: state.observations\n  }\n}\n\n\nexport default connect(mapStateToProps)(Map)","import React from \"react\"\n\nimport style from \"./AddObservation.css\";\n\nconst AddObservationView = (props) => {\n  const {\n    title,\n    lat,\n    lng,\n    date,\n    hour,\n    observationContents,\n    onAddObservation,\n    onFieldChange,\n    onContentChange,\n    onSetDateNow,\n    onSetMyLocation,\n    onAddSubtitle,\n    onAddTextArea,\n    onAddImage,\n    onAddVideo\n  } = {...props}\n\n  const observationContentsPreview = observationContents.map(obsCont => {\n    let preview\n    switch (obsCont.type) {\n      case 'paragraph':\n        preview = <div key={obsCont.id}>\n          <textarea \n            id={obsCont.id} \n            value={obsCont.text}\n            onChange={onContentChange}\n          /> \n        </div>\n        break;\n      case 'subtitle':\n        preview = <div key={obsCont.id}>\n          <input \n            id={obsCont.id}\n            className=\"subtitle\" \n            value={obsCont.text}\n            onChange={onContentChange}\n          />\n        </div>\n        break;\n      case 'image':\n        console.log('imageUrl', obsCont)\n        preview = <div key={obsCont.id}>\n            <img src={obsCont.url} alt=\"\" />\n          </div>\n        break;\n      case 'video':\n        console.log(obsCont)\n        preview = <div key={obsCont.id}>\n              <iframe\n                title=\"video\"\n                width=\"560\"\n                height=\"315\"    \n                src={obsCont.url}\n                frameBorder=\"0\"\n                allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen\n              ></iframe>\n          </div>\n        break;\n      default:\n        break;\n    }\n\n    return preview\n\n  })\n\n  return (\n    <section className=\"AddObservation\">\n      <header>\n        <div id=\"observationInfo\">\n          <div>\n            Titulo: <input name=\"title\" type=\"text\" onChange={onFieldChange}/>\n          </div>\n          <div>\n            Fecha: <input name=\"date\" type=\"date\" onChange={onFieldChange} lang=\"es\"/> \n            Hora: <input className=\"small\" name=\"hour\" type=\"number\" onChange={onFieldChange}/> \n            Minuto: <input className=\"small\" name=\"min\" type=\"number\" onChange={onFieldChange}/> \n            <button onClick={onSetDateNow}>Hoy</button>\n          </div>\n          <div>\n            Ubicación: \n            lat: <input className=\"small\" name=\"lat\" type=\"text\" onChange={onFieldChange}/>\n            lng: <input className=\"small\" name=\"lng\" type=\"text\" onChange={onFieldChange}/>\n            <button onClick={onSetMyLocation}>Mi ubicación actual</button>\n            <button onClick={onSetMyLocation}>Ubicar en mapa</button>\n          </div>\n            {/* FALTA SELECTOR DE CATEGORIA */}\n          <div>\n            Palabras clave (divide usando comas): <input name=\"tags\" type=\"text\" onChange={onFieldChange}/>\n          </div>\n        </div>\n        <div id=\"observationAdd\">\n          <button>-</button> \n          {/* Agregar colapsador */}\n          <button onClick={onAddObservation}>Registrar Observación</button>\n        </div>\n      </header>\n      <div id=\"observationContent\">\n        <header>\n          <div>\n            <button onClick={onAddSubtitle}>Agrega Subtitulo</button>\n          </div>\n          <div>\n            <button onClick={onAddTextArea}>Agrega Parrafo</button>\n          </div>\n          <div>\n            <input type=\"text\" name=\"imageUrl\" placeholder=\"url\" onChange={onFieldChange}/>\n            <input type=\"file\" name=\"imageFile\" onChange={onFieldChange}/>\n            <button onClick={onAddImage}>Agrega imagen</button>\n          </div>\n          <div>\n            <input type=\"text\" name=\"videoUrl\" onChange={onFieldChange}/>\n            <button onClick={onAddVideo}>Agrega video</button>\n          </div>\n        </header>\n        <div id=\"contents\">\n          {\n            observationContentsPreview\n          }\n        </div>\n      </div>\n    </section>\n\n  )\n}\n\nexport default AddObservationView","import React, { Component } from \"react\"\n\nimport { connect } from \"react-redux\";\n\nimport AddObservationView from './AddObservationView'\n\nclass AddObservation extends Component {\n\n  state = {\n    title: '',\n    lat: 0,\n    lng: 0,\n    date: null,\n    hour: 0,\n    tags: [],\n    imageUrl: '',\n    videoUrl: '',\n    imageFile: '',\n    observationContents: []\n  }\n  \n  componentDidMount () {\n    console.log('AddObservation Did Mount')\n  }\n\n  componentWillUnmount () {\n    console.log('AddObservation Will unMount')\n  }\n\n  handleSetDateNow = () => {\n    console.log('setDateNow')\n    \n  }\n  handleSetMyLocation = () => {\n    console.log('setMyLocation')\n    \n  }\n  handleAddSubtitle = () => {\n    console.log('addSubtitle')\n    const newContent = {\n      type: 'subtitle',\n      text: '',\n      id: this.state.observationContents.length\n    }\n    this.setState({\n      observationContents: [...this.state.observationContents, newContent]\n    })\n  }\n\n  handleAddTextArea = () => {\n    const newContent = {\n      type: 'paragraph',\n      text: '',\n      id: this.state.observationContents.length\n    }\n    this.setState({\n      observationContents: [...this.state.observationContents, newContent]\n    })    \n  }\n\n  handleAddImage = () => {\n    console.log('addImage')\n    const newContent = {\n      type: 'image',\n      url: this.state.imageUrl,\n      id: this.state.observationContents.length\n    }\n    this.setState({\n      observationContents: [...this.state.observationContents, newContent]\n    })\n  }\n\n  handleAddVideo = () => {\n    console.log('addVideo')\n    console.log(this.state.videoUrl)\n    const newContent = {\n      type: 'video',\n      url: this.state.videoUrl,\n      id: this.state.observationContents.length\n    }\n    this.setState({\n      observationContents: [...this.state.observationContents, newContent]\n    })\n    \n  }\n\n  handleContentChange = (e) => {\n    \n    console.log('handleContentChange', e.target.id)\n    const contents = this.state.observationContents\n    contents.find(cont => cont.id == e.target.id).text = e.target.value\n    this.setState({\n      observationContents: [...contents]\n    })\n    \n  }\n\n  handleContentDelete = (e) => {\n\n    console.log('handleContentChange', e)\n    \n  }\n\n  handleContentChangePosition = (e) => {\n\n    console.log('handleContentChange', e)\n    \n  }\n\n  handleFieldChange = (e) => {\n\n\n    if (e.target.name === 'videoUrl') {\n\n      // TODO agregar vimeo\n      if (e.target.value.split('v=')[1]) {\n        const videoId = e.target.value.split('v=')[1].split('&')[0] // https://www.youtube.com/watch?v=20ikUENPMBE\n        this.setState({\n          videoUrl: `https://www.youtube.com/embed/${videoId}`\n        })\n      }\n\n    } else {\n\n      this.setState({\n        [e.target.name]: e.target.value\n      })\n\n    }\n  }\n\n  handleAddObservation = () => {\n    console.log('addObservation')\n    this.props.dispatch({\n      type: 'ADD_OBSERVATION',\n      title: this.state.title,\n      lat: this.state.lat,\n      lng: this.state.lng,\n      date: this.state.date,\n      hour: this.state.hour,\n      tags: this.state.tags,\n      imageUrl: this.state.imageUrl,\n      videoUrl: this.state.videoUrl,\n      imageFile: this.state.imageFile,\n      observationContents: this.state.observationContents\n    })\n    this.setState({\n      redirect: true\n    })\n  }\n  \n  render() {\n    const props = {\n      ...this.state,\n      onFieldChange: this.handleFieldChange,\n      onContentChange: this.handleContentChange,\n      // onContentDelete: this.handleContentDelete,\n      // onContentChangePosition: this.handleContentChangePosition,\n      onSetDateNow: this.handleSetDateNow,\n      onSetMyLocation: this.handleSetMyLocation,\n      onAddSubtitle: this.handleAddSubtitle,\n      onAddTextArea: this.handleAddTextArea,\n      onAddImage: this.handleAddImage,\n      onAddVideo: this.handleAddVideo,\n      onAddObservation: this.handleAddObservation\n    }\n    return <AddObservationView {...props}/>\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps)(AddObservation)","import React from \"react\"\n\nimport style from \"./Register.css\";\n\nconst RegisterView = (props) => {\n  const {\n    onNameChange,\n    name,\n    addPerson\n  } = {...props}\n  return <div className=\"Register\">\n    <input type=\"text\" onChange={onNameChange} value={name} />\n    <button onClick={addPerson}>Registrsar</button>\n  </div>\n}\n\nexport default RegisterView","import React, { Component } from \"react\"\n\nimport { connect } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\n\nimport RegisterView from './RegisterView'\n\nclass Register extends Component {\n\n  state = {\n    name: '',\n    newId: null,\n    redirect: false\n  }\n  \n  componentDidMount () {\n    console.log('Register Did Mount')\n  }\n\n  componentWillUnmount () {\n    console.log('Register Will unMount')\n  }\n\n  handleNameChange = (e) => {\n    this.setState({\n      name: e.target.value\n    })\n  }\n\n  addPerson = () => {\n    this.props.dispatch({\n      type: 'ADD_PERSON',\n      userId: this.state.newId,\n      name: this.state.name\n    })\n    this.setState({\n      redirect: true\n    })\n  }\n  \n  render() {\n    if (this.state.redirect) return <Redirect to=\"/\"/>\n    const props = {\n      name: this.state.name,\n      onNameChange: this.handleNameChange,\n      addPerson: this.addPerson\n    }\n    return <RegisterView {...props}/>\n  }\n}\n\nexport default connect()(Register)","import React, { Component } from 'react';\nimport './App.css';\n\nimport { connect } from 'react-redux'\nimport {HashRouter, Switch, Route, Link} from 'react-router-dom';\n\nimport Home from \"./components/Home/Home\";\nimport Map from \"./components/Map/Map\";\nimport AddObservation from './components/AddObservation/AddObservation';\nimport Register from './components/Register/Register';\n\nclass App extends Component {\n  render() {\n    console.log('user', this.props.user)\n    console.log('observations', this.props.observations)\n    return (\n      <HashRouter basename=\"/\">\n        <div className=\"App\">\n        <header>\n          <Link to=\"/\"> Home </Link>\n          <Link to=\"/map\"> Map </Link>\n          {\n            ! this.props.user ?\n              <Link to=\"/register\"> Registro </Link> \n            :\n              <Link to=\"/profile\"> Perfil de {this.props.user.name} </Link> \n          }\n          <Link to=\"/add-observation\"> Nueva observación </Link>\n        </header>\n        <section className=\"Container\">\n          <Switch>\n            <Route exact path=\"/\" component={Home}/>\n            <Route exact path=\"/map\" component={Map}/>\n            <Route exact path=\"/register\" component={Register}/>\n            <Route exact path=\"/add-observation\" component={AddObservation}/>\n          </Switch>\n        </section>\n      </div>\n      </HashRouter>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    observations: state.observations\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","function people (state = [], action) {\n  console.log('state people', state)\n\n  switch (action.type) {\n    case 'ADD_PERSON':\n\n      console.log('ADD_PERSON', action)      \n      const newUser = {\n        userId: action.id,\n        name: action.name\n      }\n      return [...state, newUser]\n      \n    default:\n      return state\n  }\n}\n\nexport default people","const observations = [\n  {\n    title: 'Hola',\n    lat: 19.0,\n    lng: -99.0,\n    id: 123\n  }\n]\n\nexport default observations","import defaultObservations from '../data/observations'\n\nfunction observations (state = defaultObservations, action) {\n  console.log('state observations', state)\n\n  switch (action.type) {\n    case 'ADD_OBSERVATION':\n      \n      const newObservation = {\n        title: action.title,\n        lat: action.lat,\n        lng: action.lng,\n        date: action.date,\n        hour: action.hour,\n        tags: action.tags,\n        imageUrl: action.imageUrl,\n        videoUrl: action.videoUrl,\n        imageFile: action.imageFile,\n        observationContents: action.observationContents\n      }\n      return [...state, newObservation]\n      \n    case 'REMOVE_OBSERVATION':\n      \n      return state.filter(obs => obs.observationId != action.id)\n      \n    default:\n      return state\n  }\n}\n\nexport default observations","function usere (state = null, action) {\n  console.log('state usere', state)\n\n  switch (action.type) {\n    case 'ADD_PERSON':      \n      return {\n        userId: action.id,\n        name: action.name\n      }\n      \n    default:\n      return state\n  }\n}\n\nexport default usere","import { combineReducers } from 'redux';\nimport PeopleReducer from './people-reducer'\nimport ObservationsReducer from './observations-reducer'\nimport UserReducer from './user-reducer'\n\nconst rootReducer = combineReducers({\n\tpeople: PeopleReducer,\n  observations: ObservationsReducer,\n  user: UserReducer\n});\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport reducers from './reducers';\n\nReactDOM.render(\n  <Provider store={createStore(reducers)}>\n    <BrowserRouter baseUrl=\"/hw-react-redux\">\n      <App/>\n    </BrowserRouter>\n  </Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}